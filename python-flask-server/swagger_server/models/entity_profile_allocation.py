# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class EntityProfileAllocation(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, allocation_date_time: datetime=None, allocation_type: str=None, profile_id: str=None, allocated_by_profile: str=None):  # noqa: E501
        """EntityProfileAllocation - a model defined in Swagger

        :param allocation_date_time: The allocation_date_time of this EntityProfileAllocation.  # noqa: E501
        :type allocation_date_time: datetime
        :param allocation_type: The allocation_type of this EntityProfileAllocation.  # noqa: E501
        :type allocation_type: str
        :param profile_id: The profile_id of this EntityProfileAllocation.  # noqa: E501
        :type profile_id: str
        :param allocated_by_profile: The allocated_by_profile of this EntityProfileAllocation.  # noqa: E501
        :type allocated_by_profile: str
        """
        self.swagger_types = {
            'allocation_date_time': datetime,
            'allocation_type': str,
            'profile_id': str,
            'allocated_by_profile': str
        }

        self.attribute_map = {
            'allocation_date_time': 'allocationDateTime',
            'allocation_type': 'allocationType',
            'profile_id': 'profileId',
            'allocated_by_profile': 'allocatedByProfile'
        }

        self._allocation_date_time = allocation_date_time
        self._allocation_type = allocation_type
        self._profile_id = profile_id
        self._allocated_by_profile = allocated_by_profile

    @classmethod
    def from_dict(cls, dikt) -> 'EntityProfileAllocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EntityProfileAllocation of this EntityProfileAllocation.  # noqa: E501
        :rtype: EntityProfileAllocation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allocation_date_time(self) -> datetime:
        """Gets the allocation_date_time of this EntityProfileAllocation.


        :return: The allocation_date_time of this EntityProfileAllocation.
        :rtype: datetime
        """
        return self._allocation_date_time

    @allocation_date_time.setter
    def allocation_date_time(self, allocation_date_time: datetime):
        """Sets the allocation_date_time of this EntityProfileAllocation.


        :param allocation_date_time: The allocation_date_time of this EntityProfileAllocation.
        :type allocation_date_time: datetime
        """

        self._allocation_date_time = allocation_date_time

    @property
    def allocation_type(self) -> str:
        """Gets the allocation_type of this EntityProfileAllocation.

        The allocation type - whether it's for appreciation, yearly volunteers, past participants, etc  # noqa: E501

        :return: The allocation_type of this EntityProfileAllocation.
        :rtype: str
        """
        return self._allocation_type

    @allocation_type.setter
    def allocation_type(self, allocation_type: str):
        """Sets the allocation_type of this EntityProfileAllocation.

        The allocation type - whether it's for appreciation, yearly volunteers, past participants, etc  # noqa: E501

        :param allocation_type: The allocation_type of this EntityProfileAllocation.
        :type allocation_type: str
        """

        self._allocation_type = allocation_type

    @property
    def profile_id(self) -> str:
        """Gets the profile_id of this EntityProfileAllocation.


        :return: The profile_id of this EntityProfileAllocation.
        :rtype: str
        """
        return self._profile_id

    @profile_id.setter
    def profile_id(self, profile_id: str):
        """Sets the profile_id of this EntityProfileAllocation.


        :param profile_id: The profile_id of this EntityProfileAllocation.
        :type profile_id: str
        """

        self._profile_id = profile_id

    @property
    def allocated_by_profile(self) -> str:
        """Gets the allocated_by_profile of this EntityProfileAllocation.

        The profile id it's allocated by  # noqa: E501

        :return: The allocated_by_profile of this EntityProfileAllocation.
        :rtype: str
        """
        return self._allocated_by_profile

    @allocated_by_profile.setter
    def allocated_by_profile(self, allocated_by_profile: str):
        """Sets the allocated_by_profile of this EntityProfileAllocation.

        The profile id it's allocated by  # noqa: E501

        :param allocated_by_profile: The allocated_by_profile of this EntityProfileAllocation.
        :type allocated_by_profile: str
        """

        self._allocated_by_profile = allocated_by_profile
