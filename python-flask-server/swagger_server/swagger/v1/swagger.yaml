---
swagger: "2.0"
info:
  description: "This api is the backend for taggle platform service\n"
  version: "1.0.0-beta"
  title: "Midburn IL ticket allocation service API"
host: "allocation-service.midburn.org"
basePath: "/v1/tickets-allocation"
schemes:
- "https"
produces:
- "application/json"
- "application/x-gzip"
paths:
  /{eventId}/allocations/{entityType}/{entityId}:
    get:
      summary: "Get the allocations for entity *entityId* of type *entityType* (camp/volunteer\
        \ department/etc) for the specific event *eventId* - Allocation - Event -\
        \ Entity - Profile"
      operationId: "event_id_allocations_entity_type_entity_id_get"
      parameters:
      - name: "eventId"
        in: "path"
        description: "The event id"
        required: true
        type: "string"
        default: "Midburn2019"
      - name: "entityType"
        in: "path"
        description: "the entity type - whether it's a camp, a volunteers department,\
          \ etc"
        required: true
        type: "string"
      - name: "entityId"
        in: "path"
        description: "the entity id - the id/name of the camp, volunteers department,\
          \ or any other entity that has tickets allocation"
        required: true
        type: "string"
      responses:
        200:
          description: "The response for the entity allocation request - includes\
            \ the original request, the request status, and the entity update allocations"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EntityProfileAllocation"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      security:
      - Bearer Token: []
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    post:
      tags:
      - "Allocation"
      - "Event"
      - "Entity"
      summary: "Allocate for entity *entityId* of type *entityType* (camp/volunteer\
        \ department/etc) *numAllocations*of type *allocType* for the specific event\
        \ *eventId*"
      operationId: "event_id_allocations_entity_type_entity_id_post"
      parameters:
      - name: "eventId"
        in: "path"
        description: "The event id"
        required: true
        type: "string"
        default: "Midburn2019"
      - name: "entityType"
        in: "path"
        description: "the entity type - whether it's a camp, a volunteers department,\
          \ etc"
        required: true
        type: "string"
      - name: "entityId"
        in: "path"
        description: "the entity id - the id/name of the camp, volunteers department,\
          \ or any other entity that has tickets allocation"
        required: true
        type: "string"
      - in: "body"
        name: "allocation"
        description: "The actual allocation."
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/EntityAllocation"
      responses:
        201:
          description: "The response for the entity allocation request - includes\
            \ the original request, the request status, and the entity update allocations"
          schema:
            $ref: "#/definitions/EntityAllocationResponse"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      security:
      - Bearer Token: []
      x-swagger-router-controller: "swagger_server.controllers.allocation_controller"
    put:
      tags:
      - "Allocation"
      - "Event"
      - "Entity"
      - "Profile"
      summary: "Adds an allocation of type *allocType* for profile *profileId* from\
        \ entity *entityId* of type *entityType* (camp/volunteer department/etc) \
        \ for the specific event *eventId*"
      operationId: "event_id_allocations_entity_type_entity_id_put"
      parameters:
      - name: "eventId"
        in: "path"
        description: "The event id"
        required: true
        type: "string"
        default: "Midburn2019"
      - name: "entityType"
        in: "path"
        description: "the entity type - whether it's a camp, a volunteers department,\
          \ etc"
        required: true
        type: "string"
      - name: "entityId"
        in: "path"
        description: "the entity id - the id/name of the camp, volunteers department,\
          \ or any other entity that has tickets allocation"
        required: true
        type: "string"
      - in: "body"
        name: "allocation"
        description: "The actual profile allocation."
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/EntityProfileAllocation"
      responses:
        202:
          description: "The response for the entity allocation request - includes\
            \ the original request, the request status, and the entity update allocations"
          schema:
            $ref: "#/definitions/EntityProfileAllocationResponse"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      security:
      - Bearer Token: []
      x-swagger-router-controller: "swagger_server.controllers.allocation_controller"
  /{eventId}/allocations:
    get:
      summary: "Get all allocations for profile *profileId* [optional filters - from\
        \ entity *entityId*, of type *entityType* (camp/volunteer department/etc),\
        \ allocation of type *allocType*]  for the specific event *eventId* - Allocation\
        \ - Event - Entity - Profile"
      operationId: "event_id_allocations_get"
      parameters:
      - name: "eventId"
        in: "path"
        description: "The event id"
        required: true
        type: "string"
        default: "Midburn2019"
      - name: "entityType"
        in: "query"
        description: "the entity type - whether it's a camp, a volunteers department,\
          \ etc"
        required: false
        type: "string"
      - name: "entityId"
        in: "query"
        description: "the entity id - the id/name of the camp, volunteers department,\
          \ or any other entity that has tickets allocation"
        required: false
        type: "string"
      - name: "allocType"
        in: "query"
        description: "The allocation type - whether it's for appreciation, yearly\
          \ volunteers, past participants, etc"
        required: false
        type: "string"
      responses:
        200:
          description: "The response for the entity allocation request - includes\
            \ the original request, the request status, and the entity update allocations"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EntityProfileAllocation"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      security:
      - Bearer Token: []
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
securityDefinitions:
  Basic Authentication:
    description: "Basic http authentication using username and password. Used only\
      \ for the /auth/token endpoint to exchage it with a new bearer token.\n"
    type: "basic"
  Bearer Token:
    description: "A bearer token to be used for all endpoints except for the /users/login\
      \ endpoint.\n"
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  EntityAllocation:
    type: "object"
    properties:
      allocationDateTime:
        type: "string"
        format: "date-time"
      allocationType:
        type: "string"
        description: "The allocation type - whether it's for appreciation, yearly\
          \ volunteers, past participants, etc"
      numAllocations:
        type: "integer"
        format: "int32"
      allocatedByProfile:
        type: "string"
        description: "The profile id it's allocated by"
    example:
      allocatedByProfile: "allocatedByProfile"
      allocationDateTime: "2000-01-23T04:56:07.000+00:00"
      allocationType: "allocationType"
      numAllocations: 0
  EntityAllocationResponse:
    type: "object"
    properties:
      originalRequest:
        $ref: "#/definitions/EntityAllocation"
      allocationStatus:
        type: "string"
        enum:
        - "ALLOCATED"
        - "NOT_PERMITTED"
        - "ERROR"
      allocationStatusDetailsMessage:
        type: "string"
    example:
      originalRequest:
        allocatedByProfile: "allocatedByProfile"
        allocationDateTime: "2000-01-23T04:56:07.000+00:00"
        allocationType: "allocationType"
        numAllocations: 0
      allocationStatusDetailsMessage: "allocationStatusDetailsMessage"
      allocationStatus: "ALLOCATED"
  EntityProfileAllocation:
    type: "object"
    properties:
      allocationDateTime:
        type: "string"
        format: "date-time"
      allocationType:
        type: "string"
        description: "The allocation type - whether it's for appreciation, yearly\
          \ volunteers, past participants, etc"
      profileId:
        type: "string"
      allocatedByProfile:
        type: "string"
        description: "The profile id it's allocated by"
    example:
      allocatedByProfile: "allocatedByProfile"
      allocationDateTime: "2000-01-23T04:56:07.000+00:00"
      profileId: "profileId"
      allocationType: "allocationType"
  EntityProfileAllocationResponse:
    type: "object"
    properties:
      originalRequest:
        $ref: "#/definitions/EntityProfileAllocation"
      allocationStatus:
        type: "string"
        enum:
        - "ALLOCATED"
        - "ALREADY_ALLOCATED_FOR_ENTITY"
        - "ALREADY_ALLOCATED_FOR_DIFFERENT_ENTITY"
        - "ERROR"
      allocationStatusDetailsMessage:
        type: "string"
    example:
      originalRequest:
        allocatedByProfile: "allocatedByProfile"
        allocationDateTime: "2000-01-23T04:56:07.000+00:00"
        profileId: "profileId"
        allocationType: "allocationType"
      allocationStatusDetailsMessage: "allocationStatusDetailsMessage"
      allocationStatus: "ALLOCATED"
  Error:
    type: "object"
    required:
    - "error"
    - "message"
    - "status"
    - "timestamp"
    properties:
      timestamp:
        type: "integer"
        format: "int64"
      status:
        type: "integer"
        format: "int32"
      error:
        type: "string"
      message:
        type: "string"
      path:
        type: "string"
